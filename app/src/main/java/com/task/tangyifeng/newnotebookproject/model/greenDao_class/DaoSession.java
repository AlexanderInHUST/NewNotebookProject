package com.task.tangyifeng.newnotebookproject.model.greenDao_class;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.task.tangyifeng.newnotebookproject.model.greenDao_class.AccountBook;
import com.task.tangyifeng.newnotebookproject.model.greenDao_class.Clock;
import com.task.tangyifeng.newnotebookproject.model.greenDao_class.Note;
import com.task.tangyifeng.newnotebookproject.model.greenDao_class.Picture;

import com.task.tangyifeng.newnotebookproject.model.greenDao_class.AccountBookDao;
import com.task.tangyifeng.newnotebookproject.model.greenDao_class.ClockDao;
import com.task.tangyifeng.newnotebookproject.model.greenDao_class.NoteDao;
import com.task.tangyifeng.newnotebookproject.model.greenDao_class.PictureDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountBookDaoConfig;
    private final DaoConfig clockDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig pictureDaoConfig;

    private final AccountBookDao accountBookDao;
    private final ClockDao clockDao;
    private final NoteDao noteDao;
    private final PictureDao pictureDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountBookDaoConfig = daoConfigMap.get(AccountBookDao.class).clone();
        accountBookDaoConfig.initIdentityScope(type);

        clockDaoConfig = daoConfigMap.get(ClockDao.class).clone();
        clockDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        pictureDaoConfig = daoConfigMap.get(PictureDao.class).clone();
        pictureDaoConfig.initIdentityScope(type);

        accountBookDao = new AccountBookDao(accountBookDaoConfig, this);
        clockDao = new ClockDao(clockDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        pictureDao = new PictureDao(pictureDaoConfig, this);

        registerDao(AccountBook.class, accountBookDao);
        registerDao(Clock.class, clockDao);
        registerDao(Note.class, noteDao);
        registerDao(Picture.class, pictureDao);
    }
    
    public void clear() {
        accountBookDaoConfig.getIdentityScope().clear();
        clockDaoConfig.getIdentityScope().clear();
        noteDaoConfig.getIdentityScope().clear();
        pictureDaoConfig.getIdentityScope().clear();
    }

    public AccountBookDao getAccountBookDao() {
        return accountBookDao;
    }

    public ClockDao getClockDao() {
        return clockDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public PictureDao getPictureDao() {
        return pictureDao;
    }

}
